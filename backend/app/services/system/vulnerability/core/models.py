from enum import Enum
from typing import List, Dict, Optional
from pydantic import BaseModel


class ScanType(str, Enum):
    QUICK = "quick"
    STANDARD = "standard"
    COMPREHENSIVE = "comprehensive"
    SILENT = "silent"


class ThreatLevel(str, Enum):
    INFO = "info"
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    CRITICAL = "critical"


class Vulnerability(BaseModel):
    id: str
    name: str
    description: str
    threat_level: ThreatLevel
    risk_score: float
    evidence: Optional[str] = None
    mitigation: Optional[str] = None
    references: List[str] = []


class ScanResult(BaseModel):
    scan_type: ScanType
    vulnerabilities: List[Vulnerability]
    total_risk_score: float
    duration: float
    timestamp: float
    system_info: Dict[str, str]
